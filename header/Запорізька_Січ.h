#ifndef Запорізька_Січ
#define Запорізька_Січ

#ifdef _WIN32
#include <Windows.h>
#define вперед_козаки SetConsoleOutputCP(1251)
#else
#include <unistd.h>
#define вперед_козаки
#endif

#include <fstream>
#include <iostream>
#include <iomanip>
#include <string>
#include <ctime>

#define отаман_головний int main
#define вжити using
#define наректи typedef
#define Гетьманщина std
#define сказати cout
#define слухати cin
#define повернути return

#define рубати do
#define допоки while
#define для for

#define якщо if
#define анумо else

#define курінь class
#define братство struct
#define список enum

#define шаблюка break
#define добити continue
#define роздоріжжя switch
#define шлях case
#define гоп default

#define правда true
#define неправда false

#define курінь_новий endl
#define свіжий new
#define страта delete
#define туди_не_знаю_куди nullptr
#define НІЩО NULL
#define жереб rand
#define щасливий_жереб srand
#define в_рядочок to_string
#define ширина setw
#define наказ_гетьмана const
#define міць pow
#define тримай_лях throw
#define гнів_небес exception
#define читати_літопис ifstream
#define писати_літопис ofstream
#define літопис fstream
#define побратим friend
#define схаменись goto
#define люстерко template
#define назви typename
#define гетьманський private
#define громадський public
#define козачий protected
#define устрій inline
#define кошовий static
#define цей this
#define допит try
#define впіймати catch
#define хутір namespace
#define відкрити open
#define закрити close
#define суд_громовиці auto
#define як static_cast
#define зиркнути peek
#define пара pair
#define старший first
#define молодший second
#define отаман operator
#define сунути move

#define халепа exception
#define що_сталось what

#define час time

#define зачерпнути getline
#define добрий_козак good
#define бусурман_проклятий fail
#define казка_скінчилась eof
#define кс eof
#define криниця_січі ostream
#define джерело_січі istream
#define міняти swap
#define відкусити get

вжити люд = int;
вжити велика_дробова = double;
вжити мала_дробова = float;
вжити літера = char;
вжити багато_літер = Гетьманщина::string;
вжити нічого = void;
вжити дрібний = short;
вжити довгий = long;
вжити гарматний_постріл = long long;
вжити міра = size_t;
вжити глузд = bool;

вжити однобокий_люд = unsigned int;
вжити однобока_літера = unsigned char;
вжити однобокий_дрібний = unsigned short;
вжити однобокий_довгий = unsigned long;
вжити однобокий_гарматний_постріл = unsigned long long;

список козацький_лічильник { нуль = 0, шаг = 1, копійка = 2, дві_копійки = 3, п’ятак = 4,
червінець = 5, гривня = 6, срібняк = 7, золотник = 8, дев’ятка = 9, десяточка = 10 };

#include <queue>

#define черга queue
#define останній back
#define застовпити emplace
#define порожня empty
#define перший front
#define відрізати pop
#define приліпити push
#define розмір size
#define взяти_козуб _Get_container

хутір Степи_України
{
    люстерко <назви Різновид>
    братство Гілка
    {
        Різновид ключ;
        міра висота;
        Гілка<Різновид>* ліво;
        Гілка<Різновид>* право;
        Гілка(Різновид ключ) : ключ(ключ), ліво(туди_не_знаю_куди), право(туди_не_знаю_куди), висота(1) {}
    };

    люстерко <назви Різновид>
    курінь КозацькеДерево
    {
    гетьманський:
        Гілка<Різновид>* корінь;

        люд умова_балансування(Гілка<Різновид>* гілочка);

        нічого перерахувати_висоту(Гілка<Різновид>* гілочка);

        Гілка<Різновид>* повернути_праворуч(Гілка<Різновид>* гілочка);

        Гілка<Різновид>* повернути_ліворуч(Гілка<Різновид>* гілочка);

        Гілка<Різновид>* вирівняти(Гілка<Різновид>* гілочка);

        Гілка<Різновид>* знайти_та_вирубати_найменшу(Гілка<Різновид>* гілочка, Гілка<Різновид>*& найменша);

        Гілка<Різновид>* вирубати_за_ключем(Гілка<Різновид>* гілочка, Різновид ключ);

        Гілка<Різновид>* вставити(Гілка<Різновид>* гілочка, Різновид ключ);

        Гілка<Різновид>* відгалузити(Гілка<Різновид>* корінь);

    громадський:
        КозацькеДерево() : корінь(туди_не_знаю_куди) {}

        КозацькеДерево(наказ_гетьмана КозацькеДерево<Різновид>& побратим);

        КозацькеДерево<Різновид>& отаман = (наказ_гетьмана КозацькеДерево<Різновид>& побратим);

        КозацькеДерево(КозацькеДерево<Різновид>&& побратим);

        КозацькеДерево<Різновид>& отаман = (КозацькеДерево<Різновид> && побратим);

        ~КозацькеДерево()
        {
            зрубати(корінь);
        }

        нічого зрубати(Гілка<Різновид>*& гілочка);

        Гілка<Різновид>*& викопати_корінь()
        {
            повернути корінь;
        }

        нічого посадити_корінь(Гілка<Різновид>* корінь)
        {
            цей->корінь = корінь;
        }

        міра висота();

        нічого додати(Різновид ключ);

        нічого вирубати(Різновид ключ);

        глузд чи_росте(Різновид ключ);
    };

    люстерко <назви Різновид>
    люд КозацькеДерево<Різновид>::умова_балансування(Гілка<Різновид>* гілочка)
    {
        повернути (гілочка->право ? гілочка->право->висота : 0) - (гілочка->ліво ? гілочка->ліво->висота : 0);
    }

    люстерко <назви Різновид>
    нічого КозацькеДерево<Різновид>::перерахувати_висоту(Гілка<Різновид>* гілочка)
    {
        однобока_літера вис_ліво = гілочка->ліво ? гілочка->ліво->висота : 0;
        однобока_літера вис_право = гілочка->право ? гілочка->право->висота : 0;
        гілочка->висота = (вис_ліво > вис_право ? вис_ліво : вис_право) + 1;
    }

    люстерко <назви Різновид>
    Гілка<Різновид>* КозацькеДерево<Різновид>::повернути_праворуч(Гілка<Різновид>* гілочка)
    {
        Гілка<Різновид>* ліва_гілочка = гілочка->ліво;
        гілочка->ліво = ліва_гілочка->право;
        ліва_гілочка->право = гілочка;
        перерахувати_висоту(гілочка);
        перерахувати_висоту(ліва_гілочка);
        повернути ліва_гілочка;
    }

    люстерко <назви Різновид>
    Гілка<Різновид>* КозацькеДерево<Різновид>::повернути_ліворуч(Гілка<Різновид>* гілочка)
    {
        Гілка<Різновид>* права_гілочка = гілочка->право;
        гілочка->право = права_гілочка->ліво;
        права_гілочка->ліво = гілочка;
        перерахувати_висоту(гілочка);
        перерахувати_висоту(права_гілочка);
        повернути права_гілочка;
    }

    люстерко <назви Різновид>
    нічого КозацькеДерево<Різновид>::зрубати(Гілка<Різновид>*& гілочка)
    {
        якщо (гілочка)
        {
            зрубати(гілочка->ліво);
            зрубати(гілочка->право);
            страта гілочка;
            гілочка = туди_не_знаю_куди;
        }
    }
}
#endif
